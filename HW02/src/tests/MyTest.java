package tests;

import org.junit.Test;
import tsp.TSP;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

/**
 * Created by mart on 15.11.15.
 */
public class MyTest {

    private static final int[][] MATRIX_LARGE = {
            {0, 128, 71, 85, 185, 68, 257, 232, 193, 199, 25, 130, 65, 171, 44},
            {128, 0, 91, 62, 58, 81, 161, 108, 151, 97, 126, 48, 179, 72, 84},
            {71, 91, 0, 29, 149, 87, 252, 199, 212, 143, 89, 149, 136, 163, 47},
            {85, 62, 29, 0, 120, 70, 223, 170, 195, 114, 89, 110, 143, 134, 47},
            {185, 58, 149, 120, 0, 117, 107, 50, 98, 85, 165, 56, 215, 14, 142},
            {68, 81, 87, 70, 117, 0, 189, 164, 126, 178, 48, 62, 98, 103, 42},
            {257, 161, 252, 223, 107, 189, 0, 48, 99, 129, 237, 128, 287, 93, 231},
            {232, 108, 199, 170, 50, 164, 48, 0, 148, 84, 212, 106, 262, 64, 192},
            {193, 151, 212, 195, 98, 126, 99, 148, 0, 183, 174, 101, 223, 84, 167},
            {199, 97, 143, 114, 85, 178, 129, 84, 183, 0, 203, 130, 257, 99, 161},
            {25, 126, 89, 89, 165, 48, 237, 212, 174, 203, 0, 107, 54, 151, 42},
            {130, 48, 149, 110, 56, 62, 128, 106, 101, 130, 107, 0, 160, 42, 92},
            {65, 179, 136, 143, 215, 98, 287, 262, 223, 257, 54, 160, 0, 201, 109},
            {171, 72, 163, 134, 14, 103, 93, 64, 84, 99, 151, 42, 201, 0, 145},
            {44, 84, 47, 47, 142, 42, 231, 192, 167, 161, 42, 92, 109, 145, 0}
    };

    @Test
    public void small() {

        int[][] arr = {{0, 6, 7, 9},
                {8, 0, 9, 4},
                {5, 4, 0, 3},
                {9, 6, 7, 0}};

        int[] res = TSP.dfs(arr);
        int[] expect = new int[]{0, 2, 3, 1, 0};
        int len = 0;
        for (int i = 0; i < res.length - 1; i++) {
            len += arr[res[i]][res[i + 1]];
        }
        System.out.println("pikkus " + len);
        assertEquals(22, len);

    }

    @Test
    public void greedy() {

        int[][] arr = {{0, 128, 71, 85, 185},
                {128, 0, 91, 62, 58},
                {71, 91, 0, 29, 149},
                {85, 62, 29, 0, 120},
                {185, 58, 149, 120, 0}};

        int res = TSP.greedy(arr);

        System.out.println("pikkus " + res);
        assertTrue(res <= 450);

    }

    @Test
    public void eesti5() { //405 vastus

        int[][] arr = {{0, 128, 71, 85, 185},
                {128, 0, 91, 62, 58},
                {71, 91, 0, 29, 149},
                {85, 62, 29, 0, 120},
                {185, 58, 149, 120, 0}};

        int[] res = TSP.dfs(arr);
        int[] expect = new int[]{0, 2, 3, 1, 4, 0};

        int len = 0;
        for (int i = 0; i < res.length - 1; i++) {
            len += arr[res[i]][res[i + 1]];
        }
        System.out.println("pikkus väiksem kui 405 " + len);
        assertTrue(len <= 405);

    }

    @Test
    public void eesti10() { //730

        int[][] arr = {{0, 128, 71, 85, 185, 68, 257, 232, 193, 199},
                {128, 0, 91, 62, 58, 81, 161, 108, 151, 97},
                {71, 91, 0, 29, 149, 87, 252, 199, 212, 143},
                {85, 62, 29, 0, 120, 70, 223, 170, 195, 114},
                {185, 58, 149, 120, 0, 117, 107, 50, 98, 85},
                {68, 81, 87, 70, 117, 0, 189, 164, 126, 178},
                {257, 161, 252, 223, 107, 189, 0, 48, 99, 129},
                {232, 108, 199, 170, 50, 164, 48, 0, 148, 84},
                {193, 151, 212, 195, 98, 126, 99, 148, 0, 183},
                {199, 97, 143, 114, 85, 178, 129, 84, 183, 0}};

        int[] res = TSP.dfs(arr);
        int[] expect = new int[]{0, 2, 3, 1, 4, 9, 7, 6, 8, 5, 0};

        int len = 0;
        for (int i = 0; i < res.length - 1; i++) {
            len += arr[res[i]][res[i + 1]];
        }
        System.out.println("pikkus väiksem kui 730 " + len);
        assertTrue(len <= 730);
    }

    @Test
    public void testDfsLargeBranchAndBound() throws Exception {
        int[] expect = new int[]{1, 15, 3, 4, 2, 10, 8, 7, 9, 5, 14, 12, 6, 11, 13, 1};
        int[] res = TSP.dfs(MATRIX_LARGE);

        int len = 0;
        for (int i = 0; i < res.length - 1; i++) {
            len += MATRIX_LARGE[res[i]][res[i + 1]];
        }

        //assertArrayEquals(expect, res);
        System.out.println("pikkus väiksem kui 893 " + len);
        assertTrue(len <= 893);
    }

    @Test
    public void eesti11() {

        int[][] arr = {{0, 128, 71, 85, 185, 68, 257, 232, 193, 199, 25},
                {128, 0, 91, 62, 58, 81, 161, 108, 151, 97, 126},
                {71, 91, 0, 29, 149, 87, 252, 199, 212, 143, 89},
                {85, 62, 29, 0, 120, 70, 223, 170, 195, 114, 89},
                {185, 58, 149, 120, 0, 117, 107, 50, 98, 85, 165},
                {68, 81, 87, 70, 117, 0, 189, 164, 126, 178, 48},
                {257, 161, 252, 223, 107, 189, 0, 48, 99, 129, 237},
                {232, 108, 199, 170, 50, 164, 48, 0, 148, 84, 212},
                {193, 151, 212, 195, 98, 126, 99, 148, 0, 183, 174},
                {199, 97, 143, 114, 85, 178, 129, 84, 183, 0, 203},
                {25, 126, 89, 89, 165, 48, 237, 212, 174, 203, 0}};

        int[] res = TSP.dfs(arr);
        int[] expect = new int[]{0, 2, 3, 1, 4, 9, 7, 6, 8, 5, 10, 0};

        int len = 0;
        for (int i = 0; i < res.length - 1; i++) {
            len += arr[res[i]][res[i + 1]];
        }
        System.out.println("pikkus väiksem kui 735 " + len);
        assertTrue(len <= 735);

    }

//    @Test
//    public void eesti20() { //1455
//
//        int[][] arr = {{0, 128, 71, 85, 185, 68, 257, 232, 193, 199, 25, 130, 65, 171, 44, 252, 132, 344, 351, 214},
//                {128, 0, 91, 62, 58, 81, 161, 108, 151, 97, 126, 48, 179, 72, 84, 265, 123, 233, 249, 207},
//                {71, 91, 0, 29, 149, 87, 252, 199, 212, 143, 89, 149, 136, 163, 47, 271, 149, 288, 295, 233},
//                {85, 62, 29, 0, 120, 70, 223, 170, 195, 114, 89, 110, 143, 134, 47, 254, 132, 259, 266, 216},
//                {185, 58, 149, 120, 0, 117, 107, 50, 98, 85, 165, 56, 215, 14, 142, 214, 123, 175, 237, 160},
//                {68, 81, 87, 70, 117, 0, 189, 164, 126, 178, 48, 62, 98, 103, 42, 184, 62, 292, 330, 146},
//                {257, 161, 252, 223, 107, 189, 0, 48, 99, 129, 237, 128, 287, 93, 231, 213, 173, 135, 216, 158},
//                {232, 108, 199, 170, 50, 164, 48, 0, 148, 84, 212, 106, 262, 64, 192, 264, 173, 125, 184, 210},
//                {193, 151, 212, 195, 98, 126, 99, 148, 0, 183, 174, 101, 223, 84, 167, 116, 74, 234, 315, 62},
//                {199, 97, 143, 114, 85, 178, 129, 84, 183, 0, 203, 130, 257, 99, 161, 299, 203, 145, 152, 245},
//                {25, 126, 89, 89, 165, 48, 237, 212, 174, 203, 0, 107, 54, 151, 42, 229, 107, 340, 355, 191},
//                {130, 48, 149, 110, 56, 62, 128, 106, 101, 130, 107, 0, 160, 42, 92, 192, 70, 231, 293, 152},
//                {65, 179, 136, 143, 215, 98, 287, 262, 223, 257, 54, 160, 0, 201, 109, 282, 160, 402, 409, 244},
//                {171, 72, 163, 134, 14, 103, 93, 64, 84, 99, 151, 42, 201, 0, 145, 200, 112, 189, 248, 146},
//                {44, 84, 47, 47, 142, 42, 231, 192, 167, 161, 42, 92, 109, 145, 0, 226, 104, 306, 313, 188},
//                {252, 265, 271, 254, 214, 184, 213, 264, 116, 299, 229, 192, 282, 200, 226, 0, 122, 348, 429, 58},
//                {132, 123, 149, 132, 123, 62, 173, 173, 74, 203, 107, 70, 160, 112, 104, 122, 0, 303, 357, 84},
//                {344, 233, 288, 259, 175, 292, 135, 125, 234, 145, 340, 231, 402, 189, 306, 348, 303, 0, 189, 293},
//                {351, 249, 295, 266, 237, 330, 216, 184, 315, 152, 355, 293, 409, 248, 313, 429, 357, 189, 0, 374},
//                {214, 207, 233, 216, 160, 146, 158, 210, 62, 245, 191, 152, 244, 146, 188, 58, 84, 293, 374, 0}};
//
//        int[] res = TSP.dfs(arr);
//
//        int len = 0;
//        for (int i = 0; i < res.length - 1; i++) {
//            len += arr[res[i]][res[i + 1]];
//        }
//        System.out.println("pikkus väiksem kui 1455 " + len);
//        assertTrue(len <= 1455);
//    }
//

}
